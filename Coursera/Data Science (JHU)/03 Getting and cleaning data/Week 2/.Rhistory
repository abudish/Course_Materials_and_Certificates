args("rnorm")
help.search("rnorm")
rnorm
?rnorm
install.packages("KernSmooth")
library(KernSmooth)
clear()
clr
clr()
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = T)
unlink('testdir', recursive = TRUE)
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install.packages("xlsx")
install.packages('XML')
install.packages("data.table")
library(swirl)
getwd()
?numeric
x <- 8
numeric(x)
airquality
?na.rm
?mean
formal(mean())
formals(mean)
?formals
swirl()
Sys.Date()
mean(c(2, 4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4. 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
paste
submit()
telegram("send me some cash")
submit()
submit()
mad_libs(kiev, geniune, wombat)
mad_libs("kiev", "geniune", "wombat")
submit()
'I' %p% 'love' %p% 'R!'
environment(mean)
ls(environment(mean))
swirl()
install.packages(“RMySQL”, type = “source”)
install.packages('RMySQL', type = “source”)
install.packages(“RMySQL”)
install.packages("RMySQL")
library(RMySQL)
local()
Sys.getlocale()
hg19 <- dbConnect(MySQL(), user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user="genome",
host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome",
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
?dim
dbDisconnect(hg19)
?source
source("http://bioconductor.org/biocLite.R")
Sys.getlocale()
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createFile("example.h5")
created <- h5createFile("example.h5")
created
library(rhdf5)
created <- h5createFile("example.h5")
created
h5createFile("example.h5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
h5createFile("example.h5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
Sys.getlocale()
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
h5createFile("example.h5")
h5createFile("example.hdf5")
?h5createFile
getwd()
?gsub
a <- "aaa\sdf\sd"
b <- sub("\\", "/", a)
a <- "aaa\sdf\sd"
a <- "aaa\\sdf\\sd"
setwd("C:/Users/Админ/Dropbox/Public/00 Learning and work trannings/Coursera/Data Science (JHU)/03 Getting and cleaning data/Week 2")
getwd()
library(rhdf5)
h5createFile()
created = h5createFile("example.h5")
?h5file
?h5createFile
h5createFile("ex_createFile.h5")
created <- h5createFile("example.h5")
h5createGroup("ex_createFile.h5","foo")
