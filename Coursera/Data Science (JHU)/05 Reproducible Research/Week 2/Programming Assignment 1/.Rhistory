png(file = "plot5.png")
# How have emissions from motor vehicle sources changed from 1999â€“2008 in Baltimore City?
g <- ggplot(baltimoremotor, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("Years") +
ylab("Amount of PM2.5 emitted, in tons") +
ggtitle("Total Emissions from motor sources in the Baltimore City from 1999 to 2008")
print(g)
dev.off()
# Reading data
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
# As I understood from text on
# https://www.epa.gov/air-emissions-inventories/national-emissions-inventory-nei
# NEI onroad sources seems to be motor vehicle sources
baltimore_and_LA_onroad <- subset(NEI, (fips == "24510" | fips == "06037")  & type == "ON-ROAD")
baltimore_and_LA_motor <- aggregate(Emissions ~ year + fips, baltimore_and_LA_onroad, sum)
# change fips to factor variable
baltimore_and_LA_motor$fips <- as.factor(as.character(baltimore_and_LA_motor$fips))
# change fips numbers to the names of places
levels(baltimore_and_LA_motor$fips) <- c("LA county", "Baltimore City")
# rename column 'fips' to 'place'
names(baltimore_and_LA_motor)[names(baltimore_and_LA_motor) == 'fips'] <- 'place'
library(ggplot2)
png(file = "plot6.png")
# Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County, California (fips == "06037").
# Which city has seen greater changes over time in motor vehicle emissions?
g <- ggplot(baltimore_and_LA_motor, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("Years") +
ylab("Amount of PM2.5 emitted, in tons") +
ggtitle("Total Emissions from motor sources in the LA County\n and Baltimore City from 1999 to 2008") +
facet_grid(.~ place)
print(g)
dev.off()
# Reading data
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
# As I understood from text on
# https://www.epa.gov/air-emissions-inventories/national-emissions-inventory-nei
# NEI onroad sources seems to be motor vehicle sources
baltimore_and_LA_onroad <- subset(NEI, (fips == "24510" | fips == "06037")  & type == "ON-ROAD")
baltimore_and_LA_motor <- aggregate(Emissions ~ year + fips, baltimore_and_LA_onroad, sum)
# change fips to factor variable
baltimore_and_LA_motor$fips <- as.factor(as.character(baltimore_and_LA_motor$fips))
# change fips numbers to the names of places
levels(baltimore_and_LA_motor$fips) <- c("LA county", "Baltimore City")
# rename column 'fips' to 'place'
names(baltimore_and_LA_motor)[names(baltimore_and_LA_motor) == 'fips'] <- 'place'
library(ggplot2)
png(file = "plot6.png")
# Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County, California (fips == "06037").
# Which city has seen greater changes over time in motor vehicle emissions?
g <- ggplot(baltimore_and_LA_motor, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("Years") +
ylab("Amount of PM2.5 emitted, in tons") +
ggtitle("Total Emissions from motor sources in the LA County and Baltimore City\n from 1999 to 2008") +
facet_grid(.~ place)
print(g)
dev.off()
rm(list = ls())
# Reading data
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
baltimore <- subset(NEI, fips == "24510")
# Calculate total(sum) emissions by year for the Baltimore City
total <- with(baltimore, tapply(Emissions, year, sum))
png(file = "plot2.png")
# Have total emissions from PM2.5 decreased in the Baltimore City,
# Maryland (fips == "24510") from 1999 to 2008?
barplot(total, names.arg = names(total),
xlab = "Years",
ylab = "Amount of PM2.5 emitted, in tons",
main = "Total emissions in the Baltimore city from 1999 to 2008")
dev.off()
# Reading data
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
# Calculate total(sum) emissions by year
total <- with(NEI, tapply(Emissions, year, sum))
# Supress showing amount of PM2.5 in exponential notation (e.g 7e+06)
options(scipen=2)
png(file = "plot1.png")
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission
# from all sources for each of the years 1999, 2002, 2005, and 2008.
barplot(total, names.arg = names(total),
xlab = "Years",
ylab = "Amount of PM2.5 emitted, in tons",
main = "Total emissions from in the US from 1999 to 2008")
dev.off()
?grep
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
View(SCC)
unique(SCC$EI.Sector)
vscc <- scc[grep("Mobile", scc$EI.Sector),]
vscc <- SCC[grep("Mobile", scc$EI.Sector),]
vscc <- SCC[grep("Mobile", SCC$EI.Sector),]
View(vscc)
View(NEI)
unique(SCC$EI.Sector)
---
title: "Analysis of Acivity Monitoring data"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Loading and preprocessing the data
```{r loading_data}
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
```
```{r preprocessing_data}
activity$date <- as.Date(activity$date, "%Y-%m-%d")
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "Analysis of Acivity Monitoring data"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Loading and preprocessing the data
```{r loading_data}
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
```
```{r preprocessing_data}
activity$date <- as.Date(activity$date, "%Y-%m-%d")
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
getwd()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
View(activity)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
rm(list = ls())
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
```{r preprocessing_data}
hist(activity$steps)
str(activity)
a <- with(activity, tapply(steps, date, sum))
head(a)
a <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
head(a)
hist(a)
?hist
hist(a, brakes = names(a))
boxplot(a)
barplot(a)
?read.csv
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
activity <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
head(activity)
View(activity)
str(activity)
a <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
hist(a)
totalsteps <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
totalsteps
str(totalsteps)
mean(totalsteps)
median(totalsteps)
library(ggplot2)
qplot(totalsteps)
?qplot
qplot(totalsteps, xlab = "Total steps taken each day")
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 500)
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 1000)
hist(a)
?hist
hist(a, breaks = 10)
hist(a, breaks = 20)
hist(a, breaks = 30)
hist(a, breaks = 60)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
activity <- read.csv(unz("activity.zip", "activity.csv"))
rm(list = ls())
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
activity <- read.csv(unz("activity.zip", "activity.csv"))
library(ggplot2)
totalsteps <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
hist(a, breaks = 60)
hist(totalsteps, breaks = 60)
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 1000)
hist(totalsteps, breaks = 30)
hist(totalsteps)
hist(totalsteps, breaks = 20)
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 2000)
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 800)
qplot(totalsteps, xlab = "Total number of steps taken each day", binwidth = 1000)
hist(totalsteps, breaks = 20)
hist(totalsteps, breaks = 30)
hist(totalsteps, breaks = 30)
?hist
hist(totalsteps, breaks = 30,
xlab = "Total number of steps taken each day")
?weekdays
hist(totalsteps, breaks = 30,
xlab = "Total number of steps taken each day",
main = "Histogram of the total number of steps taken each day")
mean(totalsteps)
median(totalsteps)
?unzip
?aggregate
averages <- with(activity, tapply(steps,interval, mean, na.rm = TRUE))
head(averages)
averages2 <- with(activity, aggregate(steps,interval, mean, na.rm = TRUE))
averages2 <- with(activity, aggregate(steps,by = list(interval), mean, na.rm = TRUE))
head(averages2)
?plot
str(averages2)
averages2 <- with(activity, aggregate(steps=steps,by = list(interval=interval),
mean, na.rm = TRUE))
averages2 <- with(activity, aggregate(steps=steps,by = list(interval=interval),
FUN = mean, na.rm = TRUE))
averages2 <- with(activity, aggregate(x = (steps=steps),by = list(interval=interval),
FUN = mean, na.rm = TRUE))
str(averages2)
?list
averages2 <- with(activity, aggregate(x = list(steps=steps),by = list(interval=interval),
FUN = mean, na.rm = TRUE))
str(averages2)
names(averages)
averages2 <- aggregate(x = list(steps=activity$steps),
by = list(interval=activity$interval),
FUN = mean, na.rm = TRUE)
str(averages2)
x <- list(steps=activity$steps)
str(x)
x <- list(activity$steps)
str(x)
rm(x)
rm(averages2)
rm(averages)
averages <- aggregate(x = list(steps=activity$steps),
by = list(interval=activity$interval),
FUN = mean, na.rm = TRUE)
with(averages, plot(interval, steps, type = "l"))
with(averages, plot(interval, steps, type = "l",
xlab = "5-minute intervals",
ylab = "average number of steps taken, averaged across all days"))
with(averages, plot(interval, steps, type = "l",
xlab = "5-minute intervals",
ylab = "average number of steps taken,\n averaged across all days"))
with(averages, plot(interval, steps, type = "l",
xlab = "5-minute intervals",
ylab = "average number of steps taken, averaged across all days"))
library(ggplot2)
ggplot(data = averages, aes(x = interval, y = steps)) + geom_line() + xlab("5-minute interval") +
ylab("average number of steps taken")
ggplot(data = averages, aes(x = interval, y = steps)) +
geom_line() +
xlab = "5-minute intervals" +
ylab = "average number of steps taken, averaged across all days"
ggplot(data = averages, aes(x = interval, y = steps)) +
geom_line() +
xlab("5-minute intervals") +
ylab ("average number of steps taken, averaged across all days")
ggplot(data = averages, aes(x = interval, y = steps)) +
geom_line() +
xlab("5-minute intervals") +
ylab ("average number of steps taken,\n averaged across all days")
max(averages$steps)
?which.max
with(averages, which.max(steps))
averages[104, ]
averages[with(averages, which.max(steps))]
averages[with(averages, which.max(steps)), ]
averages[with(averages, which.max(steps)), 1]
str(activity)
is.na(activity$steps)
summary(activity$steps)
summary(activity)
View(averages)
means <- aggregate(x = list(steps=activity$steps),
by = list(day=activity$date),
FUN = mean, na.rm = TRUE)
View(means)
View(means)
head(means)
x <- with(activity, tapply(steps, date, mean, na.rm = TRUE))
x
0/23423
x <- with(activity, tapply(steps, date, median, na.rm = TRUE))
x
means
View(activity)
?mean
?is.nan
head(averages)
?mean
str(activity)
copy <- activity
copy$steps[is.na(copy$steps)]
is.na(copy$steps)
copy$steps[is.na(copy$steps)] <- 0
View(copy)
x <- with(copy, tapply(steps, date, median, na.rm = TRUE))
x
x <- with(copy, tapply(steps, date, mean, na.rm = TRUE))
x
totalsteps
mean(totalsteps)
averages[which.max(averages$steps), ]
str(averages[which.max(averages$steps), ])
averages[which.max(averages$steps), ]$inteval
a <- averages[which.max(averages$steps), ]
a$interval
averages[which.max(averages$steps), 1]
?transform
mean(activity$steps)
mean(activity$steps, na.rm = TRUE)
median(activity$steps, na.rm = TRUE)
median(activity$steps)
median(activity$steps, na.rm = TRUE)
?median
?mapply
mean(activity$steps)
mean(activity$steps, na.rm = )
mean(activity$steps, na.rm = T)
head(averages)
mean(averages$steps)
x <- with(activity, tapply(steps, date, mean, na.rm = TRUE))
x
dim(x)
head(means)
?is.nan
is.nan(means$steps)
means$steps[is.nan(means$steps)]
means$steps[is.nan(means$steps)] <- 0
is.nan(means$steps)
means
b <- with(activity, aggregate(date ~ steps, interval, FUN = mean, na.rm = TRUE ))
?aggregate
str(activity)
b <- aggregate(date ~ steps + interval, data = activity, mean)
b
b <- aggregate(steps ~ date + interval, data = activity, mean, )
b <- aggregate(steps ~ date + interval, data = activity, mean )
head(b)
b
g <- with(b, tapply(steps, interval, mean))
g
dim(b)
15264*5
76320/60
b <- aggregate(inteval ~ date + steps, data = activity, mean )
b <- aggregate(interval ~ date + steps, data = activity, mean )
b
b <- aggregate(date ~ steps + interval, data = activity, mean )
b
b <- aggregate(interval ~ steps + date, data = activity, mean )
b
b <- aggregate(date ~ steps + interval, data = activity, mean )
b
b <- aggregate(steps ~ date + interval, data = activity, mean )
b
b <- aggregate(steps ~ . + interval, data = activity, mean )
b
dim(b)
c <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
c
dim(c)
averages
averages[averages$interval == 100, ]
averages[averages$interval == 100, "steps"]
?mapply
mapply(rep, 1:4, 4:1)
mapply(mean, 1:4, 4:1)
mapply(sum, 1:4, 4:1)
?mean
index <- is.na(activity$steps)
dim(index)
index
length(index)
averages[index]
averages[index, ]
str(averages)
averages
averages[index, ]
activity[index, ]
impute <- function(steps, interval) {
imputed_value <- NA
if (is.na(steps)) {
imputed_value <- averages[averages$interval == interval, "steps"]
}
else {
imputed_value <- c(steps)
}
imputed_value
}
activity_filled <- activity
activity_filled$steps <- mapply(impute, activity_filled$steps, activity_filled$interval)
View(activity_filled)
str(activity_filled)
str(activity)
?round
d <- weekdays(activity$date)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
d <- weekdays(activity$date)
d
?xyplot
library(lattice)
?sapply
weekday_or_weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else
return("weekend")
}
activity_filled$daytype <- sapply(activity_filled$date, weekday_or_weekend)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity_filled <- activity
activity_filled$steps <- mapply(impute, activity_filled$steps, activity_filled$interval)
activity_filled$daytype <- sapply(activity_filled$date, weekday_or_weekend)
View(activity_filled)
averages_by_type <- aggregate(steps ~ interval + daytype, data = activity_filled, mean)
str(averages_by_type)
xyplot(mean ~ interval | daytype, averages_by_type,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
ggplot(averages_by_type, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
?aggregate
View(averages_by_type)
View(averages)
averages_by_type <- aggregate(activity_filled$steps,
by=list(activity_filled$daytype,
activity_filled$interval),
mean)
View(averages_by_type)
names(averages_by_type) <- c("daytype", "interval", "steps")
View(averages_by_type)
options(scipen=2)
averages_by_type <- aggregate(activity_filled$steps,
by=list(activity_filled$daytype,
activity_filled$interval),
mean)
names(averages_by_type) <- c("daytype", "interval", "steps")
View(averages_by_type)
xyplot(steps ~ interval | daytype, averages_by_type,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
library(knitr)
?knit2html
library(knitr)
?knit2html
knit2html("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd", output_file = "PA1_template.md", output_dir = 'test')
rmarkdown::render("PA1_template.Rmd", output_file = "PA1_template.html", output_dir = 'test')
getwd()
setwd("D:/R_practice/RR")
getwd()
ls()
dir()
rmarkdown::render("PA1_template.Rmd")
?rmarkdown
rmarkdown::render("PA1_template", clean = FALSE )
rmarkdown::render("PA1_template.Rmd", clean = FALSE )
rmarkdown::render("PA1_template.Rmd", clean = FALSE )
rmarkdown::render("PA1_template.Rmd", clean = FALSE )
?match
